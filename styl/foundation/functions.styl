// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

// This is the default html and body font-size for the base rem value.
$rem-base ?= 16px
$module ?= {}

//
// @functions
//

// RANGES
// We use these functions to define ranges for various things, like media queries.
$lower-bound ?= @($range)
	if length($range) is 0
		return 0

	return $range[0]

$upper-bound ?= @($range)
	if length($range) < 2
		return 999999999999

	return $range[1]

// STRIP UNIT
// It strips the unit of measure and returns it
$strip-unit ?= @($num)
	return unit($num, '')

// CONVERT TO REM
$convert-to-rem ?= @($value, $base-value = $rem-base)
	$value = $strip-unit($value) / $strip-unit($base-value)

	if $value is 0
		return $value

	return unit($value, 'rem')


// REM CALC
// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of rem's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported:
//
//   $rem-calc(10 20 30px 40);
//
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
//
//   $rem-calc((10, 20, 30, 40px));
//
// Optionally call with a different base (eg: 8px) to calculate rem.
//
//   $rem-calc(16px 32px 48px, 8px);
//
// If you require to comma separate your list
//
//   $rem-calc((16px, 32px, 48), 8px);

$rem-calc ?= @($values, $base-value = $rem-base)

	for $value, $i in $values
		$values[$i] = $convert-to-rem($value, $base-value)

	return $values


// data
data($attr)
	return s('[data-%s]', $attr)
